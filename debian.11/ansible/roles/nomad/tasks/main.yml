- name: Checking GOPATH dir
  stat:
    path: "{{ gopath }}"
  register: gopath_dir

- name: Creating GOPATH dir
  file:
    path: "{{ gopath }}"
    state: directory
  when: gopath_dir.stat.exists is false

- name: Checking Hashicorp dir
  stat:
    path: "{{ gopath }}/{{ hashicorp_path }}"
  register: hashicorp_dir

- name: Creating Hashicorp dir
  file:
    path: "{{ gopath }}/{{ hashicorp_path }}"
    state: directory
  when: hashicorp_dir.stat.exists is false

- name: Installing Git
  apt:
    name: ['golang-go', 'git', 'make', 'gcc']
    state: present
  become: yes

- name: Check if Nomad repo is already cloned
  stat:
    path: "{{ gopath }}/{{ hashicorp_path }}/nomad"
  register: nomad_dir

- name: Cloning repo
  git:
    repo: https://github.com/hashicorp/nomad.git
    dest: "{{ gopath }}/{{ hashicorp_path }}/nomad"
    version: 149b150fb2d87766b8462346d68b72831f622047 # version 1.0.4
  when: nomad_dir.stat.exists is false

- name: Check if Nomad is already built
  stat:
    path: "{{ gopath }}/bin/nomad"
  register: nomad_built

- name: Compiling Nomad
  block:

    - name: Bootstraping Nomad
      make:
        chdir: "{{ gopath }}/{{ hashicorp_path }}/nomad"
        target: bootstrap
        params:
          NUM_THREADS: 2

    - name: Compiling dev
      make:
        chdir: "{{ gopath }}/{{ hashicorp_path }}/nomad"
        target: dev
        params:
          NUM_THREADS: 2

  when: nomad_built.stat.exists is false

- name: Test the binary
  command: "{{ gopath }}/bin/nomad -version"
  register: nomad_version

- debug: msg="{{ nomad_version.stdout }}"

- debug: msg="{{ nomad_version.stderr }}"

- name: Creating nomad group
  group:
    name: nomad
    state: present
  become: yes

- name: Creating nomad user
  user:
    name: nomad
    shell: /sbin/nologin
    groups: nomad
  become: yes

- name: Checking Nomad home dir
  stat:
    path: "{{ nomad_home }}"
  register: nomad_dir
  become: yes

- name: Creating Nomad home dir and subfolders
  file:
    path: "{{ nomad_home }}/{{ item }}"
    state: directory
    owner: nomad
    group: nomad
    mode: 0750
  loop:
    - bin
    - etc
    - data
  when: nomad_dir.stat.exists is false
  become: yes

- name: Checking Nomad binary in home folder
  stat:
    path: "{{ nomad_home }}/bin/nomad"
  register: nomad_binary
  become: yes

- name: Copying nomad binary
  copy:
    src: "{{ gopath }}/bin/nomad"
    dest: "{{ nomad_home }}/bin/nomad"
    owner: nomad
    group: nomad
    mode: u+rwx,g-wx,o-rwx
    remote_src: yes
  become: yes

- name: Rendering templates
  template: src={{ item.name }}.j2 dest={{ item.path }} owner=root group=root mode=0444
  with_items:
    - { "name": nomad.service, "path": /etc/systemd/system/nomad.service }
    - { "name": server.hcl, "path": /opt/nomad/etc/server.hcl }
    - { "name": client.hcl, "path": /opt/nomad/etc/client.hcl }
  become: yes

- name: Enabling and starting Nomad
  service:
    name: nomad
    state: started
    enabled: yes
  become: yes
