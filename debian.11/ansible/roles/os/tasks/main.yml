---
- name: Removing requiretty
  lineinfile:
    dest: "/etc/sudoers"
    line: "Defaults    requiretty"
    state: absent
  become: yes
  vars:
    ansible_ssh_pipelining: no

- name: Disable wpa_supplicant
  service:
    name: wpa_supplicant
    state: stopped
    enabled: no
  become: yes

- name: Removing things we do not need
  apt:
    name: [ 'snapd', 'unattended-upgrades' ]
    state: absent
  become: yes

- name: Setting hostname
  template: src={{ item.name }}.j2 dest={{ item.path }} owner=root group=root mode=0644
  with_items:
    - { "name": hostname, "path": /etc/hostname }
  become: yes

- name: Setting up /etc/default/locale
  lineinfile:
    dest: "/etc/default/locale"
    line: "{{ item.line }}"
    state: present
    create: yes
  with_items:
    - { "line": "LANG=en_US.utf-8" }
  become: yes

- name: Check if tools are installed
  stat: path={{ item.path }}
  with_items:
    - { "name": mlocate, "path": /usr/bin/mlocate }
    - { "name": doas, "path": /usr/bin/doas }
    - { "name": vim, "path": /usr/bin/vim }
    - { "name": tmux, "path": /usr/bin/tmux }
    - { "name": net-tools, "path": /usr/sbin/ifconfig }
    - { "name": bind9-host, "path": /usr/bin/host }
    - { "name": chrony, "path": /usr/sbin/chronyd }
    - { "name": mc, "path": /usr/bin/mc }
    - { "name": fish, "path": /usr/bin/fish }
    - { "name": whois, "path": /usr/bin/whois }
    - { "name": curl, "path": /usr/bin/curl }
  register: tools_installed
  become: yes

- name: Installing tools
  apt:
    name: "{{ item.item.name }}"
    state: present
  with_items: "{{ tools_installed.results }}"
  when: item.stat.exists == false
  become: yes


# Since we are doing this in the automation the chance that
# there is a another package re-creating it is pretty low
# we need to recreate it afterward because systemd is developed by
# mentally challenged monkeys
- name: Removing /etc/sysctl.d/
  ansible.builtin.file:
    path: /etc/sysctl.d/
    state: absent
  become: yes

- name: Creating /etc/sysctl.d/
  ansible.builtin.file:
    path: /etc/sysctl.d/
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes

- name: Create a symbolic link /etc/sysctl.d/99-sysctl.conf -> /etc/sysctl.conf
  ansible.builtin.file:
    src: /etc/sysctl.conf
    dest: /etc/sysctl.d/99-sysctl.conf
    owner: root
    group: root
    state: link
  become: yes

- name: Rendering templates
  template: src={{ item.name }}.j2 dest={{ item.path }} owner=root group=root mode=0644
  with_items:
    - { "name": chrony.conf,          "path": /etc/chrony.conf                    }
    - { "name": limits.conf,          "path": /etc/security/limits.conf           }
    - { "name": nodoc,                "path": /etc/dpkg/dpkg.cfg.d/01_nodoc       }
    - { "name": apt.apt,              "path": /etc/apt/apt.conf.d/99iwinhahaha    }
    - { "name": tmux.conf,            "path": /etc/tmux.conf                      }
    - { "name": sysctl.conf,          "path": /etc/sysctl.conf                    }
    - { "name": sources.list,         "path": /etc/apt/sources.list               }
    - { "name": doas.conf,            "path": /etc/doas.conf                      }
    - { "name": modprobe.blacklist,   "path": /etc/modprobe.d/blacklist-ipv6.conf }
  become: yes

- name: Adding IWL driver
  apt:
    name: firmware-iwlwifi
    state: present
  # when: TODO
  become: yes

# - name: Rendering Grub config
#   template: src={{ item.name }}.j2 dest={{ item.path }} owner=root group=root mode=0644
#   with_items:
#     - { "name": grub.conf,  "path": /etc/default/grub }
#   register: grub_config
#   become: yes

# - name: Updating Grub (boot) config
#   command: update-grub
#   when: grub_config.changed
#   become: yes

- name: Removing limits.d
  file: path=/etc/security/limits.d state=absent
  become: yes

- name: Make sure Chrony is started up
  service:
    name: chronyd
    state: started
    enabled: yes
  become: yes


- name: Updating system
  command: /usr/bin/apt update
  args:
    warn: false
  become: yes

- name: Set timezone to Europe/Budapest
  timezone:
    name: Europe/Budapest
  become: yes

- name: Remove packages we do not need anymore
  apt:
    pkg: [ sudo ]
    state: absent
  become: true

- name: Set login shell of user {{ ansible_env.USER }}
  ansible.builtin.command: usermod --shell /usr/bin/fish {{ ansible_env.USER }}
  changed_when: false
  become: true

- name: Check ntp
  shell: chronyc sources
  register: chronyc_sources_results

- name: Output ntp
  debug:
    var: chronyc_sources_results.stdout_lines
